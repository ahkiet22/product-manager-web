extends ../../layouts/default.pug

block main
  .container.py-5
    .row.justify-content-center
      .col-lg-6.col-md-8
        .card.shadow-sm
          .card-header.bg-white.py-4.text-center.border-0
            .display-6.text-primary.mb-3
              i.fas.fa-shield-alt
            h4.mb-2 Verification Code
            p.text-muted.mb-0
              | We've sent a verification code to
              br
              span.fw-bold #{email || "your email"}

          .card-body.p-4
            form(action="/user/password/otp" method="POST")
              .text-center.mb-4
                .otp-inputs.d-flex.justify-content-center.gap-2
                  each i in [1, 2, 3, 4, 5, 6]
                    input.form-control.form-control-lg.text-center(
                      type="text"
                      name=`otp${i}`
                      maxlength="1"
                      required
                      style="width: 50px; height: 60px; font-size: 24px;"
                      autocomplete="off"
                    )
                  input.d-none(
                    type="text"
                    name="email"
                    value=email
                  )

              .text-center.mb-4
                #timer.text-muted
                  | Code expires in: 
                  span.text-primary.fw-bold 02:59

              .d-grid.gap-2
                button.btn.btn-primary.btn-lg(type="submit")
                  i.fas.fa-check-circle.me-2
                  | Verify Code

              .text-center.mt-3
                button.btn.btn-link.text-decoration-none#resend-btn(
                  resend-code-button
                  type="button"
                  disabled
                )
                  i.fas.fa-redo.me-2
                  | Resend Code

          .card-footer.bg-light.py-3.text-center
            a.text-decoration-none(href="/user/login")
              i.fas.fa-arrow-left.me-2
              | Back to Login

    // Instructions
    .row.justify-content-center.mt-4
      .col-lg-8
        .card.border-0.bg-light
          .card-body.p-4
            h5.mb-4
              i.fas.fa-info-circle.me-2.text-primary
              | Verification Instructions

            .row.g-4
              .col-md-6
                .d-flex.align-items-start
                  .display-6.text-primary.me-3
                    i.fas.fa-envelope-open
                  div
                    h6.fw-bold Check Your Email
                    p.text-muted.small Look for an email from us with the subject "Your Verification Code"

              .col-md-6
                .d-flex.align-items-start
                  .display-6.text-primary.me-3
                    i.fas.fa-keyboard
                  div
                    h6.fw-bold Enter the Code
                    p.text-muted.small Enter the 6-digit code from the email in the boxes above

            hr.my-4

            .alert.alert-warning.mb-0
              h6.alert-heading.mb-2
                i.fas.fa-exclamation-triangle.me-2
                | Important Notes:
              ul.mb-0.small
                li The verification code is valid for 5 minutes only
                li Make sure to check your spam folder
                li Each code can only be used once
                li New code can be requested after 30 seconds

    // Troubleshooting
    .row.justify-content-center.mt-4
      .col-lg-6.text-center
        p.text-muted.mb-0
          | Didn't receive the code? 
          a.text-decoration-none(href="/contact") Contact Support
          |  or try 
          a.text-decoration-none(href="#" onclick="return false;") using a different email

  script.
    // Auto-focus and auto-tab functionality
    document.addEventListener('DOMContentLoaded', function() {
      const inputs = document.querySelectorAll('input[type="text"]');
      
      // Focus first input on page load
      inputs[0].focus();

      inputs.forEach((input, index) => {
        // Auto-tab to next input
        input.addEventListener('input', function() {
          if (this.value.length === 1 && index < inputs.length - 1) {
            inputs[index + 1].focus();
          }
        });

        // Handle backspace
        input.addEventListener('keydown', function(e) {
          if (e.key === 'Backspace' && !this.value && index > 0) {
            inputs[index - 1].focus();
          }
        });
      });

      // Timer functionality
      let timeLeft = 180; // 3 minutes in seconds
      const timerDisplay = document.getElementById('timer');
      const resendBtn = document.getElementById('resend-btn');

      const updateTimer = () => {
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timerDisplay.querySelector('span').textContent = 
          `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

        if (timeLeft === 0) {
          resendBtn.disabled = false;
          return;
        }

        timeLeft--;
        setTimeout(updateTimer, 1000);
      };

      updateTimer();
    });
